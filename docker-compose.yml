services:
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=obs
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-super-secret-auth-token
      - INFLUXDB_ORG=obs
      - INFLUXDB_BUCKET=metrics
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 10s

  anomaly:
    build:
      context: ./anomaly
      dockerfile: Dockerfile
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-super-secret-auth-token
      - INFLUXDB_ORG=obs
      - INFLUXDB_BUCKET=metrics
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./anomaly:/app
    command: python app.py

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend

  otel-proxy:
    image: nginx:alpine
    ports:
      - "4319:4319"
    depends_on:
      - otel-collector
    volumes:
        - ./infra/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-config.yaml"]
    depends_on:
      - influxdb
    restart: unless-stopped
    volumes:
      - ./infra/otel-config.yaml:/etc/otel-config.yaml

  otel-hostmetrics:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-config.yaml"]
    depends_on:
      - otel-proxy
    restart: unless-stopped
    volumes:
      - ./infra/otel-config-hostmetrics.yaml:/etc/otel-config.yaml

volumes:
  influxdb_data:

networks:
  default:
    name: observability-network